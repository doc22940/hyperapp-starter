---
to: src/app/components/<%= h.inflection.camelize(name.replace(/\s/g, '_')) %>/actions.js
---

const merge = (state, fragment) => ({
  ...state,
  <%= h.inflection.camelize(name.replace(/\s/g, '_'), true) %>: {
    ...state.<%= h.inflection.camelize(name.replace(/\s/g, '_'), true) %>,
    ...fragment
  }
})

export const Up = (state) => merge(state, {
  count: state.<%= h.inflection.camelize(name.replace(/\s/g, '_'), true) %>.count + 1
})

export const Down = (state) => merge(state, {
  count: state.<%= h.inflection.camelize(name.replace(/\s/g, '_'), true) %>.count - 1
})

export const SetText = (state) => merge(state, {
  text: ev.target.value
})